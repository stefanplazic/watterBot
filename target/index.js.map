{"version":3,"sources":["../src/index.js"],"names":["app","port","process","env","PORT","require","use","bodyParser","urlencoded","extended","json","express","static","path","join","__dirname","set","mongoose","connect","databaseConfig","mongoDbUrl","keepAlive","connectTimeoutMS","useNewUrlParser","useUnifiedTopology","conn","connection","on","console","error","bind","chatsController","usersController","get","req","res","render","listen","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;AACA,IAAMC,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAGAC,QAAQ,mBAAR;;AAEAL,IAAIM,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAN,IAAIM,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAT,IAAIM,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;AACAV,IAAIM,GAAJ,CAAQK,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEAf,IAAIgB,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEAC,mBAASC,OAAT,CAAiBC,yBAAeC,UAAhC,EAA4C,EAAEC,WAAW,MAAb,EAAqBC,kBAAkB,KAAvC,EAA8CC,iBAAiB,IAA/D,EAAqEC,oBAAoB,IAAzF,EAA5C;AACA,IAAIC,OAAOR,mBAASS,UAApB;AACAD,KAAKE,EAAL,CAAQ,OAAR,EAAiBC,QAAQC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAAjB;;AAEA5B,IAAIM,GAAJ,CAAQ,GAAR,EAAayB,eAAb;AACA/B,IAAIM,GAAJ,CAAQ,QAAR,EAAkB0B,eAAlB;;AAEAhC,IAAIiC,GAAJ,CAAQ,QAAR,EAAkB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAClCA,QAAIC,MAAJ,CAAW,OAAX;AACH,CAFD;;AAIApC,IAAIiC,GAAJ,CAAQ,YAAR,EAAsB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACtCA,QAAIC,MAAJ,CAAW,WAAX;AACH,CAFD;;AAIA;AACA;AACApC,IAAIqC,MAAJ,CAAWpC,IAAX,EAAiB,YAAM;AAAE2B,YAAQU,GAAR,CAAY,mCAAmCrC,IAA/C;AAAuD,CAAhF","file":"index.js","sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport path from 'path';\r\nimport logger from 'morgan';\r\nimport mongoose from 'mongoose';\r\nimport usersController from './controllers/users.js';\r\nimport chatsController from './controllers/chats';\r\nimport databaseConfig from './config/databaseConfig';\r\nimport scheduler from './utils/scheduler';\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 3000;\r\n\r\n\r\nrequire('./config/passport');\r\n\r\napp.use(logger('dev'));\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(bodyParser.json());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.set('view engine', 'ejs');\r\n\r\nmongoose.connect(databaseConfig.mongoDbUrl, { keepAlive: 300000, connectTimeoutMS: 30000, useNewUrlParser: true, useUnifiedTopology: true });\r\nvar conn = mongoose.connection;\r\nconn.on('error', console.error.bind(console, 'connection error:'));\r\n\r\napp.use('/', chatsController);\r\napp.use('/users', usersController);\r\n\r\napp.get('/login', function (req, res) {\r\n    res.render('login');\r\n});\r\n\r\napp.get('/dashboard', function (req, res) {\r\n    res.render('dashboard');\r\n});\r\n\r\nscheduler();\r\n//listen to the port\r\napp.listen(port, () => { console.log('Node server listening on port ' + port); });\r\n\r\n\r\n"]}