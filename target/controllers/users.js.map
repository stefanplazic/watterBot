{"version":3,"sources":["../../src/controllers/users.js"],"names":["router","express","Router","get","req","res","next","send","success","message","post","passport","authenticate","session","jwt","user","body","text","quickReplies","action","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAEKG,GAFL,CAES,GAFT,EAEc,gBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;;AAEhCD,QAAIE,IAAJ,CAAS,EAAEC,SAAS,IAAX,EAAiBC,SAAS,IAA1B,EAAT;AAGH,CAPL,EAQKC,IARL,CAQU,QARV,EAQoBC,mBAASC,YAAT,CAAsB,OAAtB,EAA+B,EAAEC,SAAS,KAAX,EAA/B,CARpB,EAQwE,gBAAOT,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;;AAE1FD,QAAIE,IAAJ,CAAS,EAAEC,SAAS,IAAX,EAAiBM,KAAKV,IAAIW,IAA1B,EAAT;AAGH,CAbL,EAcKL,IAdL,CAcU,WAdV,EAcuBC,mBAASC,YAAT,CAAsB,KAAtB,EAA6B,EAAEC,SAAS,KAAX,EAA7B,CAdvB,EAcyEF,mBAASC,YAAT,CAAsB,QAAtB,EAAgC,EAAEC,SAAS,KAAX,EAAhC,CAdzE,EAc8H,gBAAOT,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAChJD,QAAIE,IAAJ,CAAS,EAAEC,SAAS,IAAX,EAAiBC,SAAS,gBAA1B,EAAT;AAEH,CAjBL;;AAmBI;AAnBJ,CAoBKC,IApBL,CAoBU,YApBV,EAoBwBC,mBAASC,YAAT,CAAsB,KAAtB,EAA6B,EAAEC,SAAS,KAAX,EAA7B,CApBxB,EAoB0E,gBAAOT,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAC5F,uCAAaF,IAAIY,IAAJ,CAASP,OAAtB;AACAJ,QAAIE,IAAJ,CAAS,EAAEC,SAAS,IAAX,EAAiBC,SAAS,iCAA1B,EAAT;AAEH,CAxBL;AAyBI;AAzBJ,CA0BKC,IA1BL,CA0BU,YA1BV,EA0BwBC,mBAASC,YAAT,CAAsB,KAAtB,EAA6B,EAAEC,SAAS,KAAX,EAA7B,CA1BxB,EA0B0E,gBAAOT,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAC5F,QAAMW,OAAOb,IAAIY,IAAJ,CAASC,IAAtB;AACA,QAAMC,eAAed,IAAIY,IAAJ,CAASE,YAA9B;AACA,QAAMC,SAAS,iBAAf;AACA;AACA,2CAAiBA,MAAjB,EAAyBF,IAAzB,EAA+BC,YAA/B;AACAb,QAAIE,IAAJ,CAAS,EAAEC,SAAS,IAAX,EAAiBC,SAAS,iCAA1B,EAAT;AAEH,CAlCL;;AAuCAW,OAAOC,OAAP,GAAiBrB,MAAjB","file":"users.js","sourcesContent":["import express from 'express';\r\nimport passport from 'passport';\r\nimport { updateBotMessage, callBradcast } from '../utils/helperFunctions';\r\n\r\nconst router = express.Router();\r\n\r\nrouter\r\n\r\n    .get('/', async (req, res, next) => {\r\n\r\n        res.send({ success: true, message: 'hi' });\r\n\r\n\r\n    })\r\n    .post('/login', passport.authenticate('login', { session: false }), async (req, res, next) => {\r\n\r\n        res.send({ success: true, jwt: req.user });\r\n\r\n\r\n    })\r\n    .post('/register', passport.authenticate('jwt', { session: false }), passport.authenticate('singup', { session: false }), async (req, res, next) => {\r\n        res.send({ success: true, message: \"Singup success\" });\r\n\r\n    })\r\n\r\n    //send notifications to everyone\r\n    .post('/broadcast', passport.authenticate('jwt', { session: false }), async (req, res, next) => {\r\n        callBradcast(req.body.message);\r\n        res.send({ success: true, message: \"Notification successfully sent.\" });\r\n\r\n    })\r\n    //update reminder text and response buttons\r\n    .post('/botUpdate', passport.authenticate('jwt', { session: false }), async (req, res, next) => {\r\n        const text = req.body.text;\r\n        const quickReplies = req.body.quickReplies;\r\n        const action = \"action@reminder\";\r\n        //cal the update function\r\n        updateBotMessage(action, text, quickReplies);\r\n        res.send({ success: true, message: \"Bot Message succesfully updated\" });\r\n\r\n    })\r\n    ;\r\n\r\n\r\n\r\nmodule.exports = router;"]}