{"version":3,"sources":["../../src/controllers/chats.js"],"names":["PAGE_ACCESS_TOKEN","router","express","Router","post","req","res","body","object","entry","forEach","webhook_event","messaging","sender_psid","sender","id","message","handleMessage","postback","handlePostback","status","send","sendStatus","get","VERIFY_TOKEN","mode","query","token","challenge","console","log","received_message","response","text","textEntered","toLowerCase","push","item","index","setTimeout","callSendAPI","received_postback","payload","newParticipant","Participant","psid","save","userInfo","rep","request","err","error","request_body","module","exports"],"mappings":"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","file":"chats.js","sourcesContent":["import express from 'express';\r\nimport request from 'request-promise';\r\nimport Participant from '../models/participants';\r\n\r\nconst PAGE_ACCESS_TOKEN = 'EAAipPa65D7sBADDa5nK4qSIPk9VjS0GPaTIUjIDr6bMf5Ns6OHGR3ZBOYt4eH5kTZCcClCK8C24O9ac2iWNfy44eIvDcvvcAfXhGNlYyEwAgBxlXbveYTj8ewrDn6b2dc227z5n6w4UbeivPAmTXkBVbOyKFETL4Ge7kmiPQZDZD';\r\nconst router = express.Router();\r\n\r\n/*create a test webhook*/\r\n// Creates the endpoint for our webhook \r\nrouter.post('/webhook', (req, res) => {\r\n\r\n    let body = req.body;\r\n\r\n    if (body.object === 'page') {\r\n\r\n        body.entry.forEach(function (entry) {\r\n\r\n            let webhook_event = entry.messaging[0];\r\n\r\n            // Get the sender PSID\r\n            let sender_psid = webhook_event.sender.id;\r\n\r\n            if (webhook_event.message) {\r\n                handleMessage(sender_psid, webhook_event.message);\r\n            } else if (webhook_event.postback) {\r\n                handlePostback(sender_psid, webhook_event.postback);\r\n            }\r\n        });\r\n\r\n        // Returns a '200 OK' response to all requests\r\n        res.status(200).send('EVENT_RECEIVED');\r\n    } else {\r\n        // Returns a '404 Not Found' if event is not from a page subscription\r\n        res.sendStatus(404);\r\n    }\r\n\r\n})\r\n\r\n    .get('/webhook', (req, res) => {\r\n        const VERIFY_TOKEN = \"stef\";\r\n\r\n        let mode = req.query['hub.mode'];\r\n        let token = req.query['hub.verify_token'];\r\n        let challenge = req.query['hub.challenge'];\r\n\r\n        // Check if a token and mode were sent\r\n        if (mode && token) {\r\n\r\n            // Check the mode and token sent are correct\r\n            if (mode === 'subscribe' && token === VERIFY_TOKEN) {\r\n\r\n                // Respond with 200 OK and challenge token from the request\r\n                console.log('WEBHOOK_VERIFIED');\r\n                res.status(200).send(challenge);\r\n\r\n            } else {\r\n                // Responds with '403 Forbidden' if verify tokens do not match\r\n                res.sendStatus(403);\r\n            }\r\n        }\r\n    });\r\n\r\n// Handles messages events\r\nasync function handleMessage(sender_psid, received_message) {\r\n    let response = [];\r\n\r\n    // Check if the message contains text\r\n    if (received_message.text) {\r\n        const textEntered = received_message.text.toLowerCase();\r\n\r\n\r\n        if (textEntered === 'menu' || textEntered === 'back') {\r\n            response.push({\r\n                \"text\": \"Welcome to this super menu\",\r\n                \"quick_replies\": [\r\n                    {\r\n                        \"content_type\": \"text\",\r\n                        \"title\": \"Info\",\r\n                        \"payload\": \"action@info\"\r\n                    },\r\n                    {\r\n                        \"content_type\": \"text\",\r\n                        \"title\": \"Change alerts\",\r\n                        \"payload\": \"action@ChangeAlerts\"\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n        else if (textEntered === 'info') {\r\n\r\n            response.push({\r\n                \"text\": \"Thank you for asking such a cool question! ðŸ™‚ I am the best waterbot ever writen. My author is Stefan Plazic\",\r\n                \"quick_replies\": [\r\n                    {\r\n                        \"content_type\": \"text\",\r\n                        \"title\": \"Back\",\r\n                        \"payload\": \"action@back\"\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n        else if (textEntered === 'change alerts') {\r\n\r\n            response.push({\r\n                \"text\": \"Ok let's get rolling! ðŸ™‚ Choose the frequency for water break reminders\",\r\n                \"quick_replies\": [\r\n                    {\r\n                        \"content_type\": \"text\",\r\n                        \"title\": \"Once a day\",\r\n                        \"payload\": \"action@onceReminder\"\r\n                    },\r\n                    {\r\n                        \"content_type\": \"text\",\r\n                        \"title\": \"Two times a day\",\r\n                        \"payload\": \"action@twoReminder\"\r\n                    },\r\n                    {\r\n                        \"content_type\": \"text\",\r\n                        \"title\": \"Three times a day\",\r\n                        \"payload\": \"action@threeReminder\"\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n        else if (textEntered === '1-2 cups' || textEntered === \"don't count\") {\r\n            \r\n            response.push({\r\n                \"attachment\": {\r\n                    \"type\": \"template\",\r\n                    \"payload\": {\r\n                        \"template_type\": \"generic\",\r\n                        \"elements\": [{\r\n                            \"title\": \"Whats wrong with you?\",\r\n\r\n                            \"image_url\": \"https://townsquare.media/site/295/files/2015/01/Loser-630x420.jpg?w=980&q=75\",\r\n\r\n                        }]\r\n                    }\r\n                }\r\n            });\r\n            response.push({ \"text\": \"Recommended amount of water per day is eight 8-ounce glasses, equals to about 2 liters, or half a gallon.\" });\r\n            response.push({\r\n                \"text\": \"Choose the frequency for water break reminders\",\r\n                \"quick_replies\": [\r\n                    {\r\n                        \"content_type\": \"text\",\r\n                        \"title\": \"Once a day\",\r\n                        \"payload\": \"action@onceReminder\"\r\n                    },\r\n                    {\r\n                        \"content_type\": \"text\",\r\n                        \"title\": \"Two times a day\",\r\n                        \"payload\": \"action@twoReminder\"\r\n                    },\r\n                    {\r\n                        \"content_type\": \"text\",\r\n                        \"title\": \"Three times a day\",\r\n                        \"payload\": \"action@threeReminder\"\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n        else if (textEntered === '3-5 cup' || textEntered === \"6 or more cup\") {\r\n            //save number of cups to user\r\n            \r\n            response.push({\r\n                \"attachment\": {\r\n                    \"type\": \"template\",\r\n                    \"payload\": {\r\n                        \"template_type\": \"generic\",\r\n                        \"elements\": [{\r\n                            \"title\": \"Congratualions you are a great person!\",\r\n\r\n                            \"image_url\": \"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/584748de-c26e-4434-beb8-393f80645804/d35chph-1aacba54-dc38-4396-abba-9e8e53906a66.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcLzU4NDc0OGRlLWMyNmUtNDQzNC1iZWI4LTM5M2Y4MDY0NTgwNFwvZDM1Y2hwaC0xYWFjYmE1NC1kYzM4LTQzOTYtYWJiYS05ZThlNTM5MDZhNjYuanBnIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.5RIH9tF1VPclyztlUZIZ0YCD7O6QIfuOd7OeQW30BOw\",\r\n\r\n\r\n                        }]\r\n                    }\r\n                }\r\n            })\r\n            response.push({\r\n                \"text\": \"Choose the frequency for water break reminders\",\r\n                \"quick_replies\": [\r\n                    {\r\n                        \"content_type\": \"text\",\r\n                        \"title\": \"Once a day\",\r\n                        \"payload\": \"action@onceReminder\"\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        else if (textEntered === \"let's dig in\") {\r\n            response.push({\r\n                \"text\": \"Ok let's get rolling! ðŸ™‚ Tell us how many cups of watter you drink daily?\",\r\n                \"quick_replies\": [\r\n                    {\r\n                        \"content_type\": \"text\",\r\n                        \"title\": \"1-2 cups\",\r\n                        \"payload\": \"action@cup\"\r\n                    },\r\n                    {\r\n                        \"content_type\": \"text\",\r\n                        \"title\": \"3-5 cup\",\r\n                        \"payload\": \"action@cup\"\r\n                    },\r\n                    {\r\n                        \"content_type\": \"text\",\r\n                        \"title\": \"6 or more cup\",\r\n                        \"payload\": \"action@cup\"\r\n                    },\r\n                    {\r\n                        \"content_type\": \"text\",\r\n                        \"title\": \"don't count\",\r\n                        \"payload\": \"action@cup\"\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n        else\r\n            // Create the payload for a basic text message\r\n            response.push({\r\n                \"text\": `Sorry I am a stupid bot, if you have any questions type Menu`\r\n            });\r\n    }\r\n\r\n    // await callSendAPI(sender_psid, item);\r\n    response.forEach((item, index) => {\r\n        setTimeout(async () => { await callSendAPI(sender_psid, item); }, 1000 * index);\r\n    });\r\n}\r\n\r\n// Handles messaging_postbacks events\r\nfunction handlePostback(sender_psid, received_postback) {\r\n    let response = [];\r\n\r\n    // Get the payload for the postback\r\n    let payload = received_postback.payload;\r\n\r\n    // Set the response based on the postback payload\r\n    if (payload === 'action@getStarted') {\r\n        //find participants\r\n        var newParticipant = new Participant({ psid: sender_psid });\r\n        newParticipant.save();\r\n        response.push({\r\n            \"text\": \"Hi ! I will be your personal water trainer ðŸ™‚ you can call me Shakira ðŸ’§\",\r\n        });\r\n        response.push({\r\n            \"text\": \"What I can do for you? â˜‘  Daily water reminders \\n â˜‘  Personalized AI recommendations\\n â˜‘  Number of cups of water drank this week\\n â˜‘  Tips about water drinkingv\",\r\n\r\n        });\r\n        response.push({\r\n            \"text\": \"Are you ready for this journey?\",\r\n            \"quick_replies\": [\r\n                {\r\n                    \"content_type\": \"text\",\r\n                    \"title\": \"Let's dig in\",\r\n                    \"payload\": \"action@digIn\"\r\n                }\r\n            ]\r\n        });\r\n\r\n    }\r\n\r\n    // Send the message to acknowledge the postback\r\n    response.forEach((item, index) => {\r\n        setTimeout(async () => { await callSendAPI(sender_psid, item); }, 1000 * index);\r\n    });\r\n\r\n}\r\n\r\n//get user Info\r\nconst userInfo = async (sender_psid) => {\r\n\r\n    try {\r\n        const rep = await request.get(\"https://graph.facebook.com/\" + sender_psid + \"?fields=first_name&access_token=\" + PAGE_ACCESS_TOKEN);\r\n        console.log(rep);\r\n\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\n\r\n\r\n// Sends response messages via the Send API\r\nasync function callSendAPI(sender_psid, response) {\r\n    // Construct the message body\r\n    let request_body = {\r\n        \"recipient\": {\r\n            \"id\": sender_psid\r\n        },\r\n        \"message\": response\r\n    }\r\n    try {\r\n        await request({\r\n            \"uri\": \"https://graph.facebook.com/v2.6/me/messages\",\r\n            \"qs\": { \"access_token\": PAGE_ACCESS_TOKEN },\r\n            \"method\": \"POST\",\r\n            \"json\": request_body\r\n        });\r\n\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nmodule.exports = router;"]}