{"version":3,"sources":["../../src/utils/scheduler.js"],"names":["schedule","result","Reminder","find","forEach","reminder","cron","participants","Participant","frequency","label","participant","response","Message","findOne","action","psid","content","err","console","error","dummy"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,WAAW,eAAXA,QAAW,GAAY;;AAEzB,QAAI;;AAEA,YAAMC,SAAS,MAAMC,oBAASC,IAAT,EAArB;AACAF,eAAOG,OAAP,CAAe,UAACC,QAAD,EAAc;AACzBC,+BAAKN,QAAL,CAAcK,SAASC,IAAvB,EAA6B,kBAAY;AACrC;AACA,oBAAMC,eAAe,MAAMC,uBAAYL,IAAZ,CAAiB,EAAEM,WAAWJ,SAASK,KAAtB,EAAjB,CAA3B;AACAH,6BAAaH,OAAb,CAAqB,gBAAOO,WAAP,EAAuB;AACxC,wBAAIC,WAAW,MAAMC,mBAAQC,OAAR,CAAgB,EAAEC,QAAQ,iBAAV,EAAhB,CAArB;AACA,sDAAYJ,YAAYK,IAAxB,EAA8BJ,SAASK,OAAvC;AACH,iBAHD;AAIH,aAPD;AAQH,SATD;AAWH,KAdD,CAeA,OAAOC,GAAP,EAAY;AAAEC,gBAAQC,KAAR,CAAcF,GAAd;AAAqB;AAEtC,CAnBD;;AAqBA,IAAMG,QAAQ,eAARA,KAAQ,GAAY;AACtB,QAAMd,eAAe,MAAMC,uBAAYL,IAAZ,EAA3B;AACAI,iBAAaH,OAAb,CAAqB,gBAAOO,WAAP,EAAuB;AACxC,YAAIC,WAAW,MAAMC,mBAAQC,OAAR,CAAgB,EAAEC,QAAQ,iBAAV,EAAhB,CAArB;AACA,0CAAYJ,YAAYK,IAAxB,EAA8BJ,SAASK,OAAvC;AACH,KAHD;AAIH,CAND;;kBAQejB,Q","file":"scheduler.js","sourcesContent":["import cron from 'node-cron';\r\nimport Participant from '../models/participants';\r\nimport Reminder from '../models/reminders';\r\nimport { callSendAPI } from './helperFunctions';\r\nimport Message from '../models/messages';\r\n\r\nconst schedule = async () => {\r\n\r\n    try {\r\n\r\n        const result = await Reminder.find();\r\n        result.forEach((reminder) => {\r\n            cron.schedule(reminder.cron, async () => {\r\n                //select users which have given reminder\r\n                const participants = await Participant.find({ frequency: reminder.label });\r\n                participants.forEach(async (participant) => {\r\n                    let response = await Message.findOne({ action: 'action@reminder' });\r\n                    callSendAPI(participant.psid, response.content);\r\n                })\r\n            });\r\n        });\r\n\r\n    }\r\n    catch (err) { console.error(err); }\r\n\r\n}\r\n\r\nconst dummy = async () => {\r\n    const participants = await Participant.find();\r\n    participants.forEach(async (participant) => {\r\n        let response = await Message.findOne({ action: 'action@reminder' });\r\n        callSendAPI(participant.psid, response.content);\r\n    });\r\n}\r\n\r\nexport default schedule;\r\n\r\n"]}